[{"/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/index.js":"1","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/App.js":"2","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/reportWebVitals.js":"3","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/Public/Title.jsx":"4","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/Public/Inputs.jsx":"5","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/Navbar/Navbar.jsx":"6","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/Public/Buttons.jsx":"7","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/Businesses/Businesses.jsx":"8","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/Public/Card.jsx":"9","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/MyAppointments/MyAppointments.jsx":"10","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/Login/Login.jsx":"11","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/Menu/Menu.jsx":"12","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/MyFavorites/MyFavorites.jsx":"13","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/Signup/Signup.jsx":"14","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/EditProfile/profile.jsx":"15","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/MyBusinesses/MyBusinesses.jsx":"16","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/BusinessPage/BusinessPage.jsx":"17","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/BusAppointments/BusAppointments.jsx":"18","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/HoursPageBus/HoursPageBus.jsx":"19","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/HoursPage/HoursPage.jsx":"20","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/CreateNewBusiness/CreateNewBusiness.jsx":"21","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/api/api.js":"22","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/Public/MyBusinessCard.jsx":"23","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/Public/DayBox.jsx":"24","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/Public/DayBoxBus.jsx":"25","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/Public/HourBox.jsx":"26","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/Client/Client.jsx":"27"},{"size":500,"mtime":1614188782019,"results":"28","hashOfConfig":"29"},{"size":5671,"mtime":1614346903427,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1614188782019,"results":"31","hashOfConfig":"29"},{"size":187,"mtime":1614188782015,"results":"32","hashOfConfig":"29"},{"size":789,"mtime":1614371508436,"results":"33","hashOfConfig":"29"},{"size":763,"mtime":1614262060497,"results":"34","hashOfConfig":"29"},{"size":199,"mtime":1614188782015,"results":"35","hashOfConfig":"29"},{"size":1577,"mtime":1614371856065,"results":"36","hashOfConfig":"29"},{"size":5380,"mtime":1614346894583,"results":"37","hashOfConfig":"29"},{"size":1733,"mtime":1614298268618,"results":"38","hashOfConfig":"29"},{"size":2442,"mtime":1614298268618,"results":"39","hashOfConfig":"29"},{"size":2042,"mtime":1614188782015,"results":"40","hashOfConfig":"29"},{"size":1635,"mtime":1614298268618,"results":"41","hashOfConfig":"29"},{"size":3846,"mtime":1614298268618,"results":"42","hashOfConfig":"29"},{"size":5624,"mtime":1614298268618,"results":"43","hashOfConfig":"29"},{"size":1360,"mtime":1614298268618,"results":"44","hashOfConfig":"29"},{"size":6365,"mtime":1614303785134,"results":"45","hashOfConfig":"29"},{"size":4001,"mtime":1614298268618,"results":"46","hashOfConfig":"29"},{"size":2047,"mtime":1614298268618,"results":"47","hashOfConfig":"29"},{"size":4124,"mtime":1614298268618,"results":"48","hashOfConfig":"29"},{"size":21956,"mtime":1614298268618,"results":"49","hashOfConfig":"29"},{"size":359,"mtime":1614341534898,"results":"50","hashOfConfig":"29"},{"size":1272,"mtime":1614304031941,"results":"51","hashOfConfig":"29"},{"size":606,"mtime":1614298268618,"results":"52","hashOfConfig":"29"},{"size":440,"mtime":1614298268618,"results":"53","hashOfConfig":"29"},{"size":1289,"mtime":1614346901279,"results":"54","hashOfConfig":"29"},{"size":860,"mtime":1614298268618,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"cnoylf",{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"58"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"58"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"58"},"/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/index.js",[],["129","130"],"/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/App.js",["131","132","133"],"import logo from \"./logo.svg\";\nimport React, { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  Redirect,\n  NavLink,\n} from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\n//components imports\nimport Inputs from \"./components/Public/Inputs\";\nimport Title from \"./components/Public/Title\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Menu from \"./components/Menu/Menu\";\nimport Buttons from \"./components/Public/Buttons\";\nimport Card from \"./components/Public/Card\";\nimport Login from \"./components/Login/Login\";\nimport Businesses from \"./components/Businesses/Businesses\";\nimport MyAppointments from \"./components/MyAppointments/MyAppointments\";\nimport Signup from \"./components/Signup/Signup\";\nimport EditProfile from \"./components/EditProfile/profile\";\nimport MyFavorites from \"./components/MyFavorites/MyFavorites\";\nimport BusinessPage from \"./components/BusinessPage/BusinessPage\";\nimport CreateNewBusiness from \"./components/CreateNewBusiness/CreateNewBusiness\";\nimport MyBusinesses from \"./components/MyBusinesses/MyBusinesses\";\nimport HoursPage from \"./components/HoursPage/HoursPage\";\nimport BusAppointments from \"./components/BusAppointments/BusAppointments\";\nimport HoursPageBus from \"./components/HoursPageBus/HoursPageBus\";\ntoast.configure();\n\nfunction App() {\n  const [state, setState] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [user, setUser] = useState({});\n  const menuClick = () => {\n    setState(!state);\n  };\n\n  //useEffect, checking the local storage to see if the user is logged in\n  useEffect(() => {\n    const userObj = localStorage.getItem(\"userObj\");\n    const access_token = window.localStorage.getItem(\"access_token\");\n    if (access_token) {\n      setUser(JSON.parse(userObj));\n      setIsLoggedIn(true);\n    } else setIsLoggedIn(false);\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <Navbar\n        username={user.firstname}\n        isLoggedIn={isLoggedIn}\n        setIsLoggedIn={setIsLoggedIn}\n        menuClick={menuClick}\n      />\n      {state == true ? (\n        <Menu\n          isBusinessOwner={user.isBusinessOwner}\n          setUser={setUser}\n          isLoggedIn={isLoggedIn}\n          setIsLoggedIn={setIsLoggedIn}\n          menuClick={menuClick}\n          setState={setState}\n        />\n      ) : null}\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Redirect to=\"/login\" />\n          </Route>\n          <Route exact path=\"/login\">\n            {isLoggedIn ? (\n              <Redirect to=\"/getbusiness\" />\n            ) : (\n              <Login setUser={setUser} setIsLoggedIn={setIsLoggedIn} />\n            )}\n          </Route>\n          <Route exact path=\"/getbusiness\">\n            {isLoggedIn ? (\n              <Businesses user={user} setUser={setUser} />\n            ) : (\n              <Redirect exact to=\"/login\" />\n            )}\n          </Route>\n          <Route exact path=\"/myappointments\">\n            {isLoggedIn ? (\n              <MyAppointments user={user} setUser={setUser} />\n            ) : (\n              <Redirect exact to=\"/login\" />\n            )}\n          </Route>\n          <Route exact path=\"/signup\">\n            <Signup />\n          </Route>\n          <Route exact path=\"/editprofile\">\n            {isLoggedIn ? (\n              <EditProfile userObj={user} />\n            ) : (\n              <Redirect exact to=\"/login\" />\n            )}\n          </Route>\n          <Route exact path=\"/mybusinesses\">\n            {isLoggedIn ? (\n              <MyBusinesses />\n            ) : (\n              <Redirect exact to=\"/mybusinesses\" />\n            )}\n          </Route>\n          {/* we hav to remember to correct this route */}\n          <Route exact path=\"/editAddBusiness/:id\">\n            {isLoggedIn ? <CreateNewBusiness /> : <CreateNewBusiness />}\n          </Route>\n          <Route exact path=\"/editAddBusiness\">\n            {isLoggedIn ? <CreateNewBusiness /> : <CreateNewBusiness />}\n          </Route>\n          <Route exact path=\"/myfavorites\">\n            {isLoggedIn ? (\n              <MyFavorites user={user} setUser={setUser} />\n            ) : (\n              <Redirect exact to=\"/login\" />\n            )}\n          </Route>\n          <Route exact path=\"/businesspage/:id\">\n            {isLoggedIn ? (\n              <BusinessPage user={user} setUser={setUser} />\n            ) : (\n              <Redirect exact to=\"/login\" />\n            )}\n          </Route>\n\n          <Route exact path=\"/hourspage/:daynum/:month/:businessid\">\n            {isLoggedIn ? (\n              <HoursPage user={user} setUser={setUser} />\n            ) : (\n              <Redirect exact to=\"/login\" />\n            )}\n          </Route>\n\n          <Route exact path=\"/busappointments/:id\">\n            {isLoggedIn ? <BusAppointments /> : <Redirect exact to=\"/login\" />}\n          </Route>\n\n          <Route exact path=\"/hourspagebus/:daynum/:month/:businessid\">\n            {isLoggedIn ? <HoursPageBus /> : <Redirect exact to=\"/login\" />}\n          </Route>\n\n          <Route render={() => <Redirect to=\"/login\" />} />\n          <Title title=\"LOG IN\" />\n          <Inputs\n            icon=\"img/profile-user.svg\"\n            type=\"email\"\n            placeholder=\"email\"\n          />\n          <Buttons text=\"Login\" />\n          <Card businessName=\"cut pro\" location=\"waze://tamra\" avg=\"4.3\" />\n          <Card\n            businessName=\"perfect cut\"\n            location=\"waze://Kafr-Qara\"\n            avg=\"4.14\"\n          />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/reportWebVitals.js",[],"/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/Public/Title.jsx",[],"/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/Public/Inputs.jsx",["134","135"],"/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/Navbar/Navbar.jsx",["136","137","138"],"import React from \"react\";\nimport { NavLink, withRouter } from \"react-router-dom\";\n\nimport \"./style.css\";\n\nconst Navbar = (props) => {\n  return (\n    <div className=\"navbar\">\n      <img\n        src=\"/img/menu.svg\"\n        className=\"menubaricon\"\n        onClick={props.menuClick}\n      ></img>\n      <div className=\"navbarcontent\">\n        <p>We make your style</p>\n        {props.isLoggedIn ? (\n          <span>\n            Hello, {props.username[0].toUpperCase() + props.username.slice(1)}\n            {/* Hello {props.username} */}\n          </span>\n        ) : null}\n      </div>\n      <NavLink exact to=\"/getbusiness\">\n        {\" \"}\n        <img src=\"/img/logo2.png\" className=\"menubaricon\"></img>\n      </NavLink>\n    </div>\n  );\n};\n\nexport default Navbar;\n","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/Public/Buttons.jsx",[],"/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/Businesses/Businesses.jsx",[],"/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/Public/Card.jsx",["139","140","141","142","143","144","145","146","147"],"import React, { useState } from \"react\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport \"./Card.css\";\n//functions imports\nimport api from \"../api/api\";\nconst Card = ({\n  businessName,\n  location,\n  avg,\n  apCard,\n  bsCard,\n  month,\n  day,\n  hour,\n  id,\n  user,\n  geolocation,\n  businessAddress,\n  ownerFirstName,\n  ownerLastName,\n  phone,\n  setUser,\n}) => {\n  //states\n  //fuctions\n  const favToggle = (e) => {\n    if (e.target.classList.contains(\"empty\")) {\n      e.target.src = \"img/filledstar.svg\";\n      e.target.classList.remove(\"empty\");\n      api(\"favorites\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: localStorage.getItem(\"access_token\"),\n        },\n        body: JSON.stringify({\n          businessId: String(id),\n        }),\n      })\n        .then((favorites) => {\n          let userObj = JSON.parse(localStorage.getItem(\"userObj\"));\n          userObj.myFavorites = favorites.myfavorites;\n          localStorage.setItem(\"userObj\", JSON.stringify(userObj));\n          setUser(userObj);\n        })\n        .catch((err) => console.error(err));\n    } else {\n      e.target.src = \"img/emptystar.svg\";\n      e.target.classList.add(\"empty\");\n      api(\"favorites\", {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: localStorage.getItem(\"access_token\"),\n        },\n        body: JSON.stringify({\n          businessId: String(id),\n        }),\n      })\n        .then((favorites) => {\n          let userObj = JSON.parse(localStorage.getItem(\"userObj\"));\n          userObj.myFavorites = favorites.myfavorites;\n          localStorage.setItem(\"userObj\", JSON.stringify(userObj));\n          setUser(userObj);\n        })\n        .catch((err) => console.error(err));\n    }\n  };\n\n  const deleteAppointment = () => {\n    api(\"appointment\", {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        token: localStorage.getItem(\"access_token\"),\n      },\n      body: JSON.stringify({\n        day: month + \"/\" + day,\n        hour: hour,\n        businessId: id,\n      }),\n    })\n      .then((appointments) => {\n        let userObj = JSON.parse(localStorage.getItem(\"userObj\"));\n        userObj.myAppointments = appointments.myappointments;\n        localStorage.setItem(\"userObj\", JSON.stringify(userObj));\n        setUser(userObj);\n      })\n      .catch((err) => console.error(err));\n  };\n\n  {\n    return !apCard && !bsCard ? (\n      <div className=\"card\">\n        <NavLink exact to={`/businesspage/${id}`}>\n          <img\n            className=\"profile-pic\"\n            src=\"https://images-na.ssl-images-amazon.com/images/I/51bBDD%2BRa1L._AC_SX355_.jpg\"\n            alt=\"\"\n          />\n        </NavLink>\n        <NavLink exact to={`/businesspage/${id}`}>\n          <h3 className=\"business-name\">{businessName}</h3>\n        </NavLink>\n        <img className=\"location-icon\" src=\"img/location.svg\" />\n        <h3 className=\"location\">{location}</h3>\n        {user.myFavorites == null ? (\n          <img\n            className=\"favorite-icon empty\"\n            src=\"img/emptystar.svg\"\n            alt=\"\"\n            onClick={favToggle}\n          />\n        ) : user.myFavorites.indexOf(String(id)) == -1 ? (\n          <img\n            className=\"favorite-icon empty\"\n            src=\"img/emptystar.svg\"\n            alt=\"\"\n            onClick={favToggle}\n          />\n        ) : (\n          <img\n            className=\"favorite-icon \"\n            src=\"img/filledstar.svg\"\n            alt=\"\"\n            onClick={favToggle}\n          />\n        )}\n\n        <div className=\"edge\"></div>\n      </div>\n    ) : bsCard ? (\n      <div className=\"bs-card\">\n        <NavLink exact to={`/businesspage/${id}`}>\n          <img\n            className=\"profile-pic\"\n            src=\"https://images-na.ssl-images-amazon.com/images/I/51bBDD%2BRa1L._AC_SX355_.jpg\"\n            alt=\"profile picture\"\n          />\n        </NavLink>\n        <NavLink exact to={`/businesspage/${id}`}>\n          <h3 className=\"owner-name\">\n            {ownerFirstName[0].toUpperCase()}\n            {ownerFirstName.slice(1)} {ownerLastName[0].toUpperCase()}\n            {ownerLastName.slice(1)}\n          </h3>\n        </NavLink>\n        <h3 className=\"business-address\">\n          {businessAddress[0].toUpperCase()}\n          {businessAddress.slice(1)}\n        </h3>\n        <img className=\"location-icon\" src=\"/img/location.svg\" />\n        <h3 className=\"phone\">{phone}</h3>\n        <img className=\"phone-icon\" src=\"/img/phone-call.svg\" />\n      </div>\n    ) : (\n      // )\n      <div className=\"fav-card\">\n        <NavLink exact to={`/businesspage/${id}`}>\n          <img\n            className=\"profile-pic\"\n            src=\"https://images-na.ssl-images-amazon.com/images/I/51bBDD%2BRa1L._AC_SX355_.jpg\"\n            alt=\"profile picture\"\n          />\n        </NavLink>\n        <NavLink exact to={`/businesspage/${id}`}>\n          <h3 className=\"business-name-fav\">{businessName}</h3>\n        </NavLink>\n        <h3 className=\"time\">\n          {month[0].toUpperCase() + month.slice(1, 3)}, {day}, {hour}\n        </h3>\n        <img\n          className=\"delete-icon\"\n          src=\"img/trash.svg\"\n          alt=\"delete\"\n          onClick={deleteAppointment}\n        />\n        <div className=\"edge\"></div>\n      </div>\n    );\n  }\n};\n\nexport default Card;\n","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/MyAppointments/MyAppointments.jsx",["148","149","150"],"import React, { useState, useEffect } from \"react\";\nimport \"./MyAppointments.css\";\nimport { toast } from \"react-toastify\";\n//functions imports\nimport api from \"../api/api\";\n//components imports\nimport Title from \"../Public/Title\";\nimport Card from \"../Public/Card\";\n\n//Login component\nconst MyAppointments = ({ user, setUser }) => {\n  //states\n  const [businesses, setBusinesses] = useState([]);\n\n  //functions\n  const getBusinessNameById = (id) => {\n    if (businesses.length > 0) {\n      const name = businesses.filter((business) => business.id == id)[0]\n        .businessname;\n      return name;\n    }\n  };\n  //useEffect\n  useEffect(() => {\n    api(\"getbusiness\", {\n      method: \"GET\",\n      headers: { token: localStorage.getItem(\"access_token\") },\n    })\n      .then((businesses) => setBusinesses(businesses))\n      .catch((err) => console.error(err));\n  }, []);\n\n  {\n    return user.myAppointments == null ||\n      JSON.parse(user.myAppointments).length === 0 ? (\n      <div className=\"MyAppointments\">\n        <Title title=\"My Appointments\" />\n        <h1 className=\"msg\">You Have No Appointments Yet</h1>\n      </div>\n    ) : (\n      <div className=\"MyAppointments\">\n        <Title title=\"My Appointments\" />\n        {JSON.parse(user.myAppointments).map((appointment, i) => {\n          return (\n            <Card\n              key={i}\n              id={appointment.businessId}\n              apCard={true}\n              businessName={getBusinessNameById(appointment.businessId)}\n              day={appointment.date}\n              month={appointment.month}\n              hour={appointment.hour}\n              setUser={setUser}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n};\n\nexport default MyAppointments;\n","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/Login/Login.jsx",[],"/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/Menu/Menu.jsx",["151","152","153","154"],"import React, { useState, useEffect } from \"react\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport \"./style.css\";\n\nconst Menu = (props) => {\n  const logOut = () => {\n    localStorage.removeItem(\"userObj\");\n    localStorage.removeItem(\"access_token\");\n    props.setUser({});\n    // setUser({});\n    toast.error(\"Good Bye\", {\n      position: toast.POSITION.BOTTOM_CENTER,\n    });\n    props.setState(false);\n    props.setIsLoggedIn(false);\n  };\n\n  const hide = () => {\n    props.setState(false);\n  };\n\n  return (\n    <div className=\"menu\">\n      <div className=\"topmenusection\">\n        {\" \"}\n        <img\n          src=\"/img/menu.svg\"\n          className=\"menubaricon\"\n          onClick={props.menuClick}\n        ></img>\n      </div>\n      {props.isLoggedIn ? (\n        <ul>\n          <NavLink className=\"navlink\" to=\"/editprofile\" onClick={hide}>\n            <li className=\"menuComponent\">Profile</li>\n          </NavLink>\n\n          <NavLink className=\"navlink\" to=\"/myfavorites\" onClick={hide}>\n            <li className=\"menuComponent\">Favorite Shops</li>\n          </NavLink>\n\n          <NavLink className=\"navlink\" to=\"/myappointments\" onClick={hide}>\n            <li className=\"menuComponent\">My Appointments</li>\n          </NavLink>\n\n          <NavLink className=\"navlink\" to=\"/mybusinesses\" onClick={hide}>\n            {props.isBusinessOwner ? (\n              <li className=\"menuComponent\">My Businesses</li>\n            ) : null}\n          </NavLink>\n\n          <NavLink className=\"navlink\" to=\"/login\" onClick={logOut}>\n            <li className=\"menuComponent\"> Log Out</li>\n          </NavLink>\n        </ul>\n      ) : (\n        <ul>\n          <NavLink className=\"navlink\" to=\"/\" onClick={hide}>\n            <li className=\"menuComponent\">Login</li>\n          </NavLink>\n\n          <NavLink class=\"navlink\" to=\"/signup\" onClick={hide}>\n            <li className=\"menuComponent\">Signup</li>\n          </NavLink>\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Menu;\n","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/MyFavorites/MyFavorites.jsx",["155","156","157"],"import React, { useState, useEffect } from \"react\";\nimport \"./MyFavorites.css\";\nimport { toast } from \"react-toastify\";\n//functions imports\nimport api from \"../api/api\";\n//components imports\nimport Title from \"../Public/Title\";\nimport Card from \"../Public/Card\";\n\n//Login component\nconst MyFavorites = ({ user, setUser }) => {\n  const [businesses, setBusinesses] = useState([]);\n\n  //functions\n  const getBusinessById = (id) => {\n    if (businesses.length > 0) {\n      const business = businesses.filter((business) => business.id == id)[0];\n      return business;\n    }\n    return {};\n  };\n\n  //useEffect\n  useEffect(() => {\n    api(\"getbusiness\", {\n      method: \"GET\",\n      headers: { token: localStorage.getItem(\"access_token\") },\n    })\n      .then((businesses) => setBusinesses(businesses))\n      .catch((err) => console.error(err));\n  }, []);\n\n  {\n    return user.myFavorites == null ||\n      JSON.parse(user.myFavorites).length === 0 ? (\n      <div className=\"myFavorites\">\n        <Title title=\"Favorites\" />\n        <h1 className=\"msg\">You Have No Favorites Yet</h1>\n      </div>\n    ) : (\n      <div className=\"MyFavorites\">\n        <Title title=\"Favorites\" />\n        {JSON.parse(user.myFavorites).map((favorite, i) => {\n          return (\n            <Card\n              key={favorite}\n              id={favorite}\n              businessName={getBusinessById(favorite).businessname}\n              location={getBusinessById(favorite).geolocation}\n              avg={4.7}\n              setUser={setUser}\n              user={user}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n};\nexport default MyFavorites;\n","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/Signup/Signup.jsx",["158"],"import React, { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport \"./signup.css\";\nimport { useHistory } from \"react-router-dom\";\n//functions imports\nimport api from \"../api/api\";\n\n//components\nimport Title from \"../Public/Title\";\nimport Buttons from \"../Public/Buttons\";\nimport Inputs from \"../Public/Inputs\";\n\n//Login component\nconst Signup = () => {\n  //states\n  const history = useHistory();\n  const [objToSend, setObjToSend] = useState({\n    email: \"\",\n    phone: \"\",\n    firstname: \"\",\n    lastname: \"\",\n    pass: \"\",\n    isBusinessOwner: false,\n  });\n\n  //functions\n  const onChangeHandler = (e) => {\n    const val = e.target.value;\n    switch (e.target.id) {\n      case \"email\":\n        setObjToSend({ ...objToSend, email: val });\n        break;\n      case \"phonenumber\":\n        setObjToSend({ ...objToSend, phone: val });\n        break;\n      case \"firstname\":\n        setObjToSend({ ...objToSend, firstname: val });\n        break;\n      case \"lastname\":\n        setObjToSend({ ...objToSend, lastname: val });\n        break;\n      case \"password\":\n        setObjToSend({ ...objToSend, pass: val });\n        break;\n      case \"business\":\n        setObjToSend({ ...objToSend, isBusinessOwner: true });\n        break;\n      case \"client\":\n        setObjToSend({ ...objToSend, isBusinessOwner: false });\n        break;\n    }\n  };\n  //functions\n  const onSubmitHandler = (e) => {\n    //missing validation in this function I will do it later- Awwad\n    e.preventDefault();\n\n    api(\"signup\", {\n      method: \"POST\",\n      headers: { \"content-type\": \"application/json\" },\n      body: JSON.stringify(objToSend),\n    })\n      .then((respone) => {\n        if (respone.message) {\n          history.push(\"/login\");\n        } else {\n          toast.error(respone, {\n            position: toast.POSITION.BOTTOM_CENTER,\n          });\n        }\n      })\n      .catch((err) => console.error(err));\n  };\n\n  return (\n    <div className=\"signup\">\n      <Title title=\"Sign Up\" />\n      <form onSubmit={onSubmitHandler}>\n        <Inputs\n          type=\"email\"\n          id=\"email\"\n          name=\"waytologin\"\n          placeholder=\"Email\"\n          icon=\"img/user.svg\"\n          alt=\"user\"\n          onChangeFunc={onChangeHandler}\n        />\n        <Inputs\n          type=\"number\"\n          id=\"phonenumber\"\n          name=\"phonenumber\"\n          placeholder=\"Phone number\"\n          icon=\"img/phone-call.svg\"\n          alt=\"phonenumber\"\n          onChangeFunc={onChangeHandler}\n        />\n        <Inputs\n          type=\"text\"\n          id=\"firstname\"\n          name=\"firstname\"\n          placeholder=\"First name\"\n          icon=\"img/identification.svg\"\n          alt=\"firstname\"\n          onChangeFunc={onChangeHandler}\n        />\n        <Inputs\n          type=\"text\"\n          id=\"lastname\"\n          name=\"lastname\"\n          placeholder=\"Last name\"\n          icon=\"img/identification.svg\"\n          alt=\"lastname\"\n          onChangeFunc={onChangeHandler}\n        />\n        <Inputs\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          icon=\"img/password.svg\"\n          alt=\"password\"\n          onChangeFunc={onChangeHandler}\n        />\n\n        <fieldset>\n          <legend>Register as</legend>\n          <label htmlFor=\"business\">Business</label>\n          <input\n            type=\"radio\"\n            name=\"register\"\n            id=\"business\"\n            value=\"\"\n            onChange={onChangeHandler}\n          />\n          <label htmlFor=\"client\">Client</label>\n          <input\n            type=\"radio\"\n            name=\"register\"\n            id=\"client\"\n            value=\"\"\n            onChange={onChangeHandler}\n          />\n        </fieldset>\n        <Buttons className=\"button\" text=\"Sign up\" />\n      </form>\n    </div>\n  );\n};\n\nexport default Signup;\n","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/EditProfile/profile.jsx",["159","160","161"],"import React, { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport \"./profile.css\";\nimport { useHistory } from \"react-router-dom\";\nimport api from \"../api/api\";\n\n//components\nimport Title from \"../Public/Title\";\nimport Buttons from \"../Public/Buttons\";\nimport Inputs from \"../Public/Inputs\";\nimport { logDOM } from \"@testing-library/react\";\n//Login component\n\nconst EditProfile = ({ userObj }) => {\n  //states\n  const history = useHistory();\n  const [objToSend, setObjToSend] = useState({\n    email: userObj.email,\n    phone: userObj.phone,\n    firstname: userObj.firstname,\n    lastname: userObj.lastname,\n    isBusinessOwner: userObj.isBusinessOwner,\n  });\n  const [passObj, setPassObj] = useState({\n    oldPassword: \"\",\n    newPassword: \"\",\n  });\n  const [hidePass, setHidePass] = useState(false);\n  const handleHidePass = (e) => {\n    setHidePass(!hidePass);\n  };\n\n  //functions\n  const onChangeHandler = (e) => {\n    const val = e.target.value;\n    switch (e.target.id) {\n      case \"email\":\n        setObjToSend({ ...objToSend, email: val });\n        break;\n      case \"phonenumber\":\n        setObjToSend({ ...objToSend, phone: val });\n        break;\n      case \"firstname\":\n        setObjToSend({ ...objToSend, firstname: val });\n        break;\n      case \"lastname\":\n        setObjToSend({ ...objToSend, lastname: val });\n        break;\n      case \"oldpass\":\n        setPassObj({ ...passObj, oldPassword: val });\n        break;\n      case \"newpass\":\n        setPassObj({ ...passObj, newPassword: val });\n        break;\n    }\n  };\n\n  //functions\n  const onSubmitHandler = (e) => {\n    //missing validation in this function I will do it later- Awwad\n    e.preventDefault();\n\n    api(\"updateUser/\", {\n      method: \"PUT\",\n      headers: {\n        \"content-type\": \"application/json\",\n        token: localStorage.getItem(\"access_token\"),\n      },\n      body: JSON.stringify(objToSend),\n    })\n      .then((response) => {\n        if (response.userObj) {\n          localStorage.setItem(\"userObj\", JSON.stringify(response.userObj));\n          localStorage.setItem(\"access_token\", response.access_token);\n          userObj = JSON.parse(localStorage.getItem(\"userObj\"));\n\n          toast.success(\"Successfully Updated \", {\n            position: toast.POSITION.BOTTOM_CENTER,\n          });\n        } else {\n          toast.error(response, {\n            position: toast.POSITION.BOTTOM_CENTER,\n          });\n        }\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n  var strongRegex = new RegExp(\"^(?=.{8,})\");\n  const onSubmitPassHandler = (e) => {\n    e.preventDefault();\n    if (!passObj.newPassword.match(strongRegex)) {\n      toast.error(\"Password must contain at least 8 or more characters\", {\n        position: toast.POSITION.BOTTOM_CENTER,\n      });\n    } else {\n      api(\"updateUserPassword/\", {\n        method: \"PUT\",\n        headers: {\n          \"content-type\": \"application/json\",\n          token: localStorage.getItem(\"access_token\"),\n        },\n        body: JSON.stringify(passObj),\n      })\n        .then((response) => {\n          if (response.phone) {\n            toast.success(\"Password updated Successfully\", {\n              position: toast.POSITION.BOTTOM_CENTER,\n            });\n          } else {\n            toast.error(response, {\n              position: toast.POSITION.BOTTOM_CENTER,\n            });\n          }\n        })\n        .catch((err) => console.error(err));\n    }\n  };\n\n  return (\n    <div className=\"editProfile\">\n      <Title title=\"Profile\" />\n      <form onSubmit={onSubmitHandler}>\n        <Inputs\n          type=\"email\"\n          id=\"email\"\n          name=\"waytologin\"\n          placeholder=\"Email\"\n          icon=\"img/user.svg\"\n          alt=\"user\"\n          value={userObj.email}\n          onChangeFunc={onChangeHandler}\n        />\n        <Inputs\n          type=\"number\"\n          id=\"phonenumber\"\n          name=\"phonenumber\"\n          placeholder=\"Phone number\"\n          icon=\"img/phone-call.svg\"\n          alt=\"phonenumber\"\n          value={userObj.phone}\n          onChangeFunc={onChangeHandler}\n        />\n        <Inputs\n          type=\"text\"\n          id=\"firstname\"\n          name=\"firstname\"\n          placeholder=\"First name\"\n          icon=\"img/identification.svg\"\n          alt=\"firstname\"\n          value={userObj.firstname}\n          onChangeFunc={onChangeHandler}\n        />\n        <Inputs\n          type=\"text\"\n          id=\"lastname\"\n          name=\"lastname\"\n          placeholder=\"Last name\"\n          icon=\"img/identification.svg\"\n          alt=\"lastname\"\n          value={userObj.lastname}\n          onChangeFunc={onChangeHandler}\n        />\n\n        <Buttons className=\"button\" text=\"Save\" />\n      </form>\n      <button className=\"passchange\" onClick={handleHidePass}>\n        <div> change password </div>\n      </button>\n      <form onSubmit={onSubmitPassHandler}>\n        {\" \"}\n        {hidePass ? (\n          <div>\n            <Inputs\n              type=\"password\"\n              id=\"oldpass\"\n              name=\"oldpass\"\n              placeholder=\"Old Password\"\n              icon=\"img/password.svg\"\n              alt=\"oldpass\"\n              onChangeFunc={onChangeHandler}\n            />\n            <Inputs\n              type=\"password\"\n              id=\"newpass\"\n              name=\"newpass\"\n              placeholder=\"New Password\"\n              icon=\"img/password.svg\"\n              alt=\"newpass\"\n              onChangeFunc={onChangeHandler}\n            />\n            <Buttons text=\"change password\" />\n          </div>\n        ) : null}\n      </form>\n    </div>\n  );\n};\n\nexport default EditProfile;\n","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/MyBusinesses/MyBusinesses.jsx",["162","163","164"],"import React, { useState, useEffect } from \"react\";\nimport \"./mybusinesses.css\";\n//components imports\nimport Inputs from \"../Public/Inputs\";\nimport MyBusinessCard from \"../Public/MyBusinessCard\";\nimport api from \"../api/api\";\nimport Title from \"../Public/Title\";\nimport { NavLink, withRouter } from \"react-router-dom\";\n\nconst MyBusinesses = () => {\n  //states\n  const handleClick = () => {};\n  const [businesses, setBusinesses] = useState([]);\n  //useEffect\n  useEffect(() => {\n    api(`getbusinessbyownerid/`, {\n      headers: { token: localStorage.getItem(\"access_token\") },\n      method: \"GET\",\n    })\n      .then((resbusinesses) => {\n        setBusinesses(resbusinesses);\n      })\n      .catch((err) => console.error(err));\n  }, []);\n\n  return (\n    <div className=\"Businesses\">\n      <Title title=\"My businesses\" />\n      <NavLink className=\"navlink\" to=\"/editAddBusiness\">\n        <div className=\"addbussiness\">Add Business</div>\n      </NavLink>\n\n      <div className=\"businesses-list\">\n        {businesses.map((business, i) => {\n          return (\n            <MyBusinessCard\n              key={i}\n              id={business.id}\n              businessName={business.businessname}\n              location={business.geolocation}\n              avg=\"3.5\"\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default MyBusinesses;\n","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/BusinessPage/BusinessPage.jsx",["165","166","167","168","169","170","171"],"import React, { useEffect, useState } from \"react\";\nimport \"./BusinessPage.css\";\nimport { NavLink } from \"react-router-dom\";\n//functions imports\nimport api from \"../api/api\";\n\n//components imports\nimport Card from \"../Public/Card\";\nimport Title from \"../Public/Title\";\nimport DayBox from \"../Public/DayBox\";\n\nconst BusinessPage = ({ user, setUser }) => {\n  let businessId = window.location.pathname.split(\"/\")[2];\n  //businesspage/:id\n  //states\n  const [business, setBusiness] = useState(null);\n  const [selectVal, setSelectVal] = useState(null);\n  const [days, setDays] = useState([]);\n  const [msg, setMsg] = useState(null);\n  const [day1, setDay1] = useState(0);\n  const daysObj = {\n    0: \"Su\",\n    1: \"Mo\",\n    2: \"Tu\",\n    3: \"We\",\n    4: \"Th\",\n    5: \"Fr\",\n    6: \"Sa\",\n    7: \"Su\",\n    8: \"Mo\",\n    9: \"Tu\",\n    10: \"We\",\n    11: \"Th\",\n    12: \"Fr\",\n    13: \"Sa\",\n  };\n\n  //functions\n  const favToggle = (e) => {\n    if (e.target.classList.contains(\"empty\")) {\n      e.target.src = \"/img/filledstar.svg\";\n      e.target.classList.remove(\"empty\");\n      api(\"favorites\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: localStorage.getItem(\"access_token\"),\n        },\n        body: JSON.stringify({\n          businessId: String(businessId),\n        }),\n      })\n        .then((favorites) => {\n          let userObj = JSON.parse(localStorage.getItem(\"userObj\"));\n          userObj.myFavorites = favorites.myfavorites;\n          localStorage.setItem(\"userObj\", JSON.stringify(userObj));\n          setUser(userObj);\n        })\n        .catch((err) => console.error(err));\n    } else {\n      e.target.src = \"/img/emptystar.svg\";\n      e.target.classList.add(\"empty\");\n      api(\"favorites\", {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: localStorage.getItem(\"access_token\"),\n        },\n        body: JSON.stringify({\n          businessId: String(businessId),\n        }),\n      })\n        .then((favorites) => {\n          let userObj = JSON.parse(localStorage.getItem(\"userObj\"));\n          userObj.myFavorites = favorites.myfavorites;\n          localStorage.setItem(\"userObj\", JSON.stringify(userObj));\n          setUser(userObj);\n        })\n        .catch((err) => console.error(err));\n    }\n  };\n\n  const changeHandler = (e) => {\n    setSelectVal(e.target.value);\n  };\n  //useEffect\n  useEffect(() => {\n    api(`business/${businessId}`, {\n      headers: { token: localStorage.getItem(\"access_token\") },\n    })\n      .then((business) => {\n        setBusiness(business);\n      })\n      .catch((err) => console.error(err));\n  }, []);\n  useEffect(() => {\n    if (selectVal != null) {\n      let firstDay = new Date(`${selectVal} 1, 2021 23:15:30`);\n      setDay1(firstDay.getDay());\n      api(`calendar/${selectVal}_${businessId}`, {\n        headers: { token: localStorage.getItem(\"access_token\") },\n      })\n        .then((calendar) => {\n          if (calendar.msg) {\n            setMsg(calendar.msg);\n          } else {\n            const daynumsArr = calendar.map((day) => {\n              return {\n                daynum: day.daynum,\n                isworking: day.isworking,\n              };\n            });\n            daynumsArr.sort((a, b) => {\n              if (a.daynum > b.daynum) return 1;\n              else if (a.daynum == b.daynum) return 0;\n              else return -1;\n            });\n            setDays(daynumsArr);\n            setMsg(null);\n          }\n        })\n        .catch((err) => console.error(err));\n    }\n  }, [selectVal]);\n\n  {\n    return business == null ? (\n      <img\n        src=\"https://media2.giphy.com/media/1dH0xIDSToAtZYwf8D/giphy.gif\"\n        className=\"scissors\"\n      />\n    ) : (\n      <div className=\"BusinessPage\">\n        <Title title={business.businessObj.businessname} />\n        <div>\n          {user.myFavorites == null ? (\n            <img\n              className=\"favorite-icon empty\"\n              src=\"/img/emptystar.svg\"\n              alt=\"\"\n              onClick={favToggle}\n            />\n          ) : user.myFavorites.indexOf(String(businessId)) == -1 ? (\n            <img\n              className=\"favorite-icon empty\"\n              src=\"/img/emptystar.svg\"\n              alt=\"\"\n              onClick={favToggle}\n            />\n          ) : (\n            <img\n              className=\"favorite-icon \"\n              src=\"/img/filledstar.svg\"\n              alt=\"\"\n              onClick={favToggle}\n            />\n          )}\n          <Card\n            id={business.businessObj.id}\n            bsCard={true}\n            businessName={business.businessObj.businessname}\n            ownerFirstName={business.firstname}\n            ownerLastName={business.lastname}\n            geolocation={business.businessObj.geolocation}\n            businessAddress={business.businessObj.businessaddress}\n            phone={business.phone}\n            setUser={setUser}\n          />\n        </div>\n        <select onChange={changeHandler}>\n          <option vale=\"\">--Month--</option>\n          <option value=\"January\">January</option>\n          <option value=\"February\">February</option>\n          <option value=\"March\">March</option>\n          <option value=\"April\">April</option>\n          <option value=\"May\">May</option>\n          <option value=\"June\">June</option>\n          <option value=\"July\">July</option>\n          <option value=\"August\">August</option>\n          <option value=\"September\">September</option>\n          <option value=\"October\">October</option>\n          <option value=\"November\">November</option>\n          <option value=\"December\">December</option>\n        </select>\n\n        {msg ? (\n          <h2 className=\"msg\">{msg}</h2>\n        ) : selectVal != null ? (\n          <div className=\"days\">\n            {[0, 1, 2, 3, 4, 5, 6].map((elem) => {\n              return <div className=\"square\">{daysObj[day1 + elem]}</div>;\n            })}\n\n            {days.map((day, i) => {\n              return (\n                <DayBox\n                  key={i}\n                  businessId={businessId}\n                  month={selectVal}\n                  isworking={day.isworking}\n                  daynum={day.daynum}\n                />\n              );\n            })}\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n};\n\nexport default BusinessPage;\n","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/BusAppointments/BusAppointments.jsx",["172","173","174","175","176","177","178","179"],"import React, { useEffect, useState } from \"react\";\nimport \"./BusAppointments.css\";\nimport { NavLink } from \"react-router-dom\";\n//functions imports\nimport api from \"../api/api\";\n\n//components imports\nimport Card from \"../Public/Card\";\nimport Title from \"../Public/Title\";\nimport DayBoxBus from \"../Public/DayBoxBus\";\n\nconst BusAppointments = () => {\n  let businessId = window.location.pathname.split(\"/\")[2];\n  //businesspage/:id\n  //states\n  const [business, setBusiness] = useState(null);\n  const [selectVal, setSelectVal] = useState(null);\n  const [days, setDays] = useState([]);\n  const [msg, setMsg] = useState(null);\n  const [day1, setDay1] = useState(0);\n  const daysObj = {\n    0: \"Su\",\n    1: \"Mo\",\n    2: \"Tu\",\n    3: \"We\",\n    4: \"Th\",\n    5: \"Fr\",\n    6: \"Sa\",\n    7: \"Su\",\n    8: \"Mo\",\n    9: \"Tu\",\n    10: \"We\",\n    11: \"Th\",\n    12: \"Fr\",\n    13: \"Sa\",\n  };\n\n  //functions\n  const changeHandler = (e) => {\n    setSelectVal(e.target.value);\n  };\n  //useEffect\n  useEffect(() => {\n    api(`business/${businessId}`, {\n      headers: { token: localStorage.getItem(\"access_token\") },\n    })\n      .then((business) => {\n        setBusiness(business);\n      })\n      .catch((err) => console.error(err));\n  }, []);\n  useEffect(() => {\n    if (selectVal != null) {\n      let firstDay = new Date(`${selectVal} 1, 2021 23:15:30`);\n      setDay1(firstDay.getDay());\n      api(`calendar/${selectVal}_${businessId}`, {\n        headers: { token: localStorage.getItem(\"access_token\") },\n      })\n        .then((calendar) => {\n          if (calendar.msg) {\n            setMsg(calendar.msg);\n          } else {\n            const daynumsArr = calendar.map((day) => {\n              return {\n                daynum: day.daynum,\n                isworking: day.isworking,\n              };\n            });\n            daynumsArr.sort((a, b) => {\n              if (a.daynum > b.daynum) return 1;\n              else if (a.daynum == b.daynum) return 0;\n              else return -1;\n            });\n            setDays(daynumsArr);\n            setMsg(null);\n          }\n        })\n        .catch((err) => console.error(err));\n    }\n  }, [selectVal]);\n\n  {\n    return business == null ? (\n      <img\n        src=\"https://media2.giphy.com/media/1dH0xIDSToAtZYwf8D/giphy.gif\"\n        className=\"scissors\"\n      />\n    ) : (\n      <div className=\"myBusiness\">\n        <Title title={business.businessObj.businessname} />\n\n        <select onChange={changeHandler}>\n          <option vale=\"\">--Month--</option>\n          <option value=\"January\">January</option>\n          <option value=\"February\">February</option>\n          <option value=\"March\">March</option>\n          <option value=\"April\">April</option>\n          <option value=\"May\">May</option>\n          <option value=\"June\">June</option>\n          <option value=\"July\">July</option>\n          <option value=\"August\">August</option>\n          <option value=\"September\">September</option>\n          <option value=\"October\">October</option>\n          <option value=\"November\">November</option>\n          <option value=\"December\">December</option>\n        </select>\n\n        {selectVal == null ? (\n          <img\n            src=\"https://media2.giphy.com/media/1dH0xIDSToAtZYwf8D/giphy.gif\"\n            className=\"scissors\"\n          />\n        ) : msg ? (\n          <h2 className=\"msg\">{msg}</h2>\n        ) : (\n          <div className=\"days\">\n            <div className=\"days-names\">\n              {[0, 1, 2, 3, 4, 5, 6].map((elem) => {\n                return <div className=\"square\">{daysObj[day1 + elem]}</div>;\n              })}\n            </div>\n            {days.map((day, i) => {\n              return (\n                <DayBoxBus\n                  key={i}\n                  businessId={businessId}\n                  month={selectVal}\n                  isworking={day.isworking}\n                  daynum={day.daynum}\n                />\n              );\n            })}\n          </div>\n        )}\n      </div>\n    );\n  }\n};\n\nexport default BusAppointments;\n","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/HoursPageBus/HoursPageBus.jsx",["180","181","182","183","184","185","186","187"],"import React, { useEffect, useState } from \"react\";\nimport uuid from \"react-uuid\";\nimport \"./HoursPageBus.css\";\n//functions imports\nimport api from \"../api/api\";\n\n//components imports\nimport HourBox from \"../Public/HourBox\";\nimport Client from \"../Client/Client\";\n//we will get something like this in the page address: http://localhost:4000/hourspage/:daynum/:month/\n\nconst HoursPageBus = () => {\n  //states\n  const [emptyHoursArr, setEmptyHoursArr] = useState([]);\n  const dayNum = window.location.pathname.split(\"/\")[2];\n  const month = window.location.pathname.split(\"/\")[3];\n  const businessId = window.location.pathname.split(\"/\")[4];\n  const calendarName = month + \"_\" + businessId;\n  const calendarNameToSend =\n    month +\n    \"/\" +\n    dayNum; /*here is the error, we were sending +businessID and not +dayNum (in line 18)*/\n\n  //functions\n\n  //useEffect (to get the calendar for that business in the given month)\n  useEffect(() => {\n    api(`calendar/${calendarName}`, {\n      headers: { token: localStorage.getItem(\"access_token\") },\n    })\n      .then((calendar) => {\n        const wantedDay = calendar.filter((day) => day.daynum == dayNum)[0];\n        const workingHours = JSON.parse(wantedDay.workinghours);\n        const appointments = JSON.parse(wantedDay.appointments);\n        let appointmentsArr = [];\n        if (appointments) {\n          setEmptyHoursArr(appointments);\n        } else {\n          setEmptyHoursArr([]);\n        }\n      })\n      .catch((err) => console.error(err));\n  }, []);\n\n  return (\n    <div>\n      <h1 className=\"date\">\n        {dayNum}, {month[0].toUpperCase()}\n        {month.slice(1)}\n      </h1>\n      {!emptyHoursArr || emptyHoursArr.length == 0 ? (\n        <h2 className=\"message\">No Appointments</h2>\n      ) : (\n        <div className=\"cards\">\n          {emptyHoursArr.map((appointment, i) => {\n            return (\n              <Client key={i} hour={appointment.hour} id={appointment.userid} />\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default HoursPageBus;\n","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/HoursPage/HoursPage.jsx",["188","189","190","191"],"import React, { useEffect, useState } from \"react\";\nimport uuid from \"react-uuid\";\nimport \"./HoursPage.css\";\n//functions imports\nimport api from \"../api/api\";\n\n//components imports\nimport HourBox from \"../Public/HourBox\";\n\n//we will get something like this in the page address: http://localhost:4000/hourspage/:daynum/:month/\n\nconst HoursPage = ({ setUser }) => {\n  //states\n  const [changes, setChanges] = useState(1);\n  const [emptyHoursArr, setEmptyHoursArr] = useState([]);\n  const dayNum = window.location.pathname.split(\"/\")[2];\n  const month = window.location.pathname.split(\"/\")[3];\n  const businessId = window.location.pathname.split(\"/\")[4];\n  const calendarName = month + \"_\" + businessId;\n  const calendarNameToSend =\n    month +\n    \"/\" +\n    dayNum; /*here is the error, we were sending +businessID and not +dayNum (in line 18)*/\n\n  //functions\n  //this function returns the sum of an hour plus minutes\n  const addMinutesToHour = (hour, minutes) => {\n    let minutesInHour = hour.split(\":\")[1];\n    let onlyHour = hour.split(\":\")[0];\n    //converting the given minutes to hours\n    let minutesToHours = parseInt(minutes / 60);\n    let remainingMinutes = minutes % 60 > 0 ? minutes % 60 : minutes;\n    let finalTime;\n    if (minutesToHours >= 1) onlyHour = parseInt(onlyHour) + minutesToHours;\n\n    const minutesSum = parseInt(minutesInHour) + remainingMinutes;\n    if (minutesSum >= 60) {\n      onlyHour++;\n      let finalMinutes = minutesSum - 60;\n      finalTime = onlyHour + \":\" + String(finalMinutes).padStart(2, \"0\");\n    } else {\n      finalTime = onlyHour + \":\" + String(minutesSum).padStart(2, \"0\");\n    }\n    return finalTime;\n  };\n\n  //useEffect (to get the calendar for that business in the given month)\n  useEffect(() => {\n    api(`calendar/${calendarName}`, {\n      headers: { token: localStorage.getItem(\"access_token\") },\n    })\n      .then((calendar) => {\n        const wantedDay = calendar.filter((day) => day.daynum == dayNum)[0];\n        const workingHours = JSON.parse(wantedDay.workinghours);\n        const appointments = JSON.parse(wantedDay.appointments);\n        const diff = wantedDay.diff;\n        // const diff = 30;\n        const emptyHoursArr = [];\n        if (!appointments) {\n          for (let i = 0; i < workingHours.length; i++) {\n            let start = workingHours[i].start;\n            while (\n              Date.parse(`01/01/2011 ${start}`) <\n              Date.parse(`01/01/2011 ${workingHours[i].end}`)\n            ) {\n              emptyHoursArr.push(start);\n\n              start = addMinutesToHour(start, diff);\n            }\n          }\n        } else {\n          for (let i = 0; i < workingHours.length; i++) {\n            let start = workingHours[i].start;\n            let ok = true;\n            while (\n              Date.parse(`01/01/2011 ${start}`) <\n              Date.parse(`01/01/2011 ${workingHours[i].end}`)\n            ) {\n              for (let i = 0; i < appointments.length; i++) {\n                if (\n                  Date.parse(`01/01/2011 ${appointments[i].hour}`) ==\n                  Date.parse(`01/01/2011 ${start}`)\n                ) {\n                  ok = false;\n                }\n              }\n              if (ok) {\n                emptyHoursArr.push(start);\n              }\n              ok = true;\n              start = addMinutesToHour(start, diff);\n            }\n          }\n        }\n        setEmptyHoursArr(emptyHoursArr);\n      })\n      .catch((err) => console.error(err));\n  }, [changes]);\n\n  return emptyHoursArr.length == 0 ? (\n    <HourBox full={true} />\n  ) : (\n    <div className=\"HoursPage\">\n      <h1 className=\"date\">\n        {dayNum}, {month[0].toUpperCase()}\n        {month.slice(1)}\n      </h1>\n      <div className=\"hours\">\n        {emptyHoursArr.map((hour, i) => {\n          return (\n            <HourBox\n              setChanges={setChanges}\n              setUser={setUser}\n              key={uuid()}\n              hour={hour}\n              calendarName={calendarNameToSend}\n              businessId={businessId}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default HoursPage;\n","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/CreateNewBusiness/CreateNewBusiness.jsx",["192","193","194","195","196","197","198","199","200","201"],"import React, { useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport \"./createnewbusiness.css\";\nimport { useHistory } from \"react-router-dom\";\nimport api from \"../api/api\";\n\n//components\nimport Title from \"../Public/Title\";\nimport Buttons from \"../Public/Buttons\";\nimport Inputs from \"../Public/Inputs\";\nimport { logDOM } from \"@testing-library/react\";\nlet userObj = JSON.parse(localStorage.getItem(\"userObj\"));\n//Login component\n\nfunction setDayWorkingHours(\n  year,\n  month,\n  workingHours,\n  numOfDay,\n  nameOfDay,\n  isWorking,\n  diff,\n  allDays\n) {\n  // numofday is the day in database\n\n  let monthnum = 0;\n  switch (month) {\n    case \"January\":\n      monthnum = 0;\n      break;\n\n    case \"February\":\n      monthnum = 1;\n      break;\n    case \"March\":\n      monthnum = 2;\n      break;\n    case \"April\":\n      monthnum = 3;\n      break;\n    case \"May\":\n      monthnum = 4;\n      break;\n    case \"June\":\n      monthnum = 5;\n      break;\n    case \"July\":\n      monthnum = 6;\n      break;\n    case \"August\":\n      monthnum = 7;\n      break;\n    case \"September\":\n      monthnum = 8;\n      break;\n    case \"October\":\n      monthnum = 9;\n      break;\n    case \"November\":\n      monthnum = 10;\n      break;\n    case \"December\":\n      monthnum = 11;\n      break;\n  }\n  var d = new Date();\n  d.setFullYear(year, monthnum, 1);\n\n  var numOfDays = daysInMonth(d.getMonth(), d.getFullYear()); //Get total days in a month\n  diff = document.getElementById(\"timediff\").value;\n  for (var i = 1; i <= numOfDays; i++) {\n    //looping through days in month\n    var newDate = new Date(d.getFullYear(), d.getMonth(), i);\n    const nameInWeek = nameDays[newDate.getDay()];\n\n    if (nameInWeek == nameOfDay) {\n      //if Sunday\n      // here we can set the working hours for the day example all sundays days\n      // we can make object for this day\n      let worktimeObj = {\n        daynum: i,\n        workinghours: workingHours,\n        isworking: isWorking,\n        diff: diff,\n      };\n      allDays.push(worktimeObj);\n    }\n  }\n  return allDays;\n\n  // here we can return for all days that nameofday the same object working hours\n  // thats include the working hours for all sundays for example\n}\nlet nameDays = [\n  \"Sunday\",\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n];\nfunction checkAllDays() {\n  // going over all days to get the ids with start and end hours\n\n  let allDays = [];\n  let someThingWrong = false;\n\n  const monthname = document.getElementById(\"month\").value;\n  const calendar = {\n    month: monthname,\n    days: \"\",\n  };\n  nameDays.map((elemnt, index) => {\n    let isworking = false;\n    const startHourElement = document.getElementById(index + \"_starthour\");\n    const endHourElement = document.getElementById(index + \"_endhour\");\n    const endHour = endHourElement.value;\n    const startHour = startHourElement.value;\n    if (\n      Date.parse(\"01/01/2011 \" + endHour) >\n      Date.parse(\"01/01/2011 \" + startHour)\n    ) {\n      isworking = true;\n    } else {\n      isworking = false;\n    }\n    const hoursobj = {\n      start: startHour,\n      end: endHour,\n    };\n    const wh = [];\n    wh.push(hoursobj);\n\n    allDays = setDayWorkingHours(\n      2021,\n      monthname,\n      wh,\n      \"numOfDay\",\n      elemnt,\n      isworking,\n      30,\n      allDays\n    );\n  });\n  calendar.days = allDays;\n  return calendar;\n}\n\nfunction daysInMonth(month, year) {\n  return new Date(year, month + 1, 0).getDate();\n}\n\nfunction make(objToSend) {\n  const monthelement = document.getElementById(\"month\");\n  // if (objToSend.calendar.month) monthelement.value = objToSend.calendar.month;\n\n  //   const daysWithNames = getTheDaysWithNamesFromCalendar(objToSend.calendar.days,objToSend.calendar.month);\n\n  return (\n    <div className=\"timesection\">\n      {nameDays.map((elemnt, index) => {\n        return (\n          <div key={\"00:0022\" + index} id={index} className=\"dayinfo\">\n            <div key={\"00:0022\" + index} className=\"dayname\">\n              {nameDays[index]}\n            </div>\n            <div key={\"00:0023\" + index} className=\"starthour\">\n              <select\n                key={index + \"_starthour\"}\n                id={index + \"_starthour\"}\n                className=\"starthour\"\n              >\n                <option key={\"00:001\" + index} value=\"00:00\">\n                  00:00\n                </option>\n                <option key={\"00:301\" + index} value=\"00:30\">\n                  00:30{\" \"}\n                </option>\n                <option key={\"1:001\" + index} value=\"1:00\">\n                  1:00{\" \"}\n                </option>\n                <option key={\"1:301\" + index} value=\"1:30\">\n                  1:30{\" \"}\n                </option>\n                <option key={\"2:001\" + index} value=\"2:00\">\n                  2:00{\" \"}\n                </option>\n                <option key={\"2:301\" + index} value=\"2:30\">\n                  2:30{\" \"}\n                </option>\n                <option key={\"3:001\" + index} value=\"3:00\">\n                  3:00{\" \"}\n                </option>\n                <option key={\"3:301\" + index} value=\"3:30\">\n                  3:30{\" \"}\n                </option>\n                <option key={\"4:001\" + index} value=\"4:00\">\n                  4:00{\" \"}\n                </option>\n                <option key={\"4:301\" + index} value=\"4:30\">\n                  4:30{\" \"}\n                </option>\n                <option key={\"5:001\" + index} value=\"5:00\">\n                  5:00{\" \"}\n                </option>\n                <option key={\"5:301\" + index} value=\"5:30\">\n                  5:30{\" \"}\n                </option>\n                <option key={\"6:001\" + index} value=\"6:00\">\n                  6:00{\" \"}\n                </option>\n                <option key={\"6:301\" + index} value=\"6:30\">\n                  6:30{\" \"}\n                </option>\n                <option key={\"7:001\" + index} value=\"7:00\">\n                  7:00{\" \"}\n                </option>\n                <option key={\"7:301\" + index} value=\"7:30\">\n                  7:30{\" \"}\n                </option>\n                <option key={\"8:001\" + index} value=\"8:00\">\n                  8:00{\" \"}\n                </option>\n                <option key={\"8:301\" + index} value=\"8:30\">\n                  8:30{\" \"}\n                </option>\n                <option key={\"9:001\" + index} value=\"9:00\">\n                  9:00{\" \"}\n                </option>\n                <option key={\"9:301\" + index} value=\"9:30\">\n                  9:30{\" \"}\n                </option>\n                <option key={\"10:001\" + index} value=\"10:00\">\n                  10:00{\" \"}\n                </option>\n                <option key={\"10:301\" + index} value=\"10:30\">\n                  10:30{\" \"}\n                </option>\n                <option key={\"11:001\" + index} value=\"11:00\">\n                  11:00{\" \"}\n                </option>\n                <option key={\"11:301\" + index} value=\"11:30\">\n                  11:30{\" \"}\n                </option>\n                <option key={\"12:001\" + index} value=\"12:00\">\n                  12:00{\" \"}\n                </option>\n                <option key={\"12:301\" + index} value=\"12:30\">\n                  12:30{\" \"}\n                </option>\n                <option key={\"13:001\" + index} value=\"13:00\">\n                  13:00{\" \"}\n                </option>\n                <option key={\"13:301\" + index} value=\"13:30\">\n                  13:30{\" \"}\n                </option>\n                <option key={\"14:001\" + index} value=\"14:00\">\n                  14:00{\" \"}\n                </option>\n                <option key={\"14:301\" + index} value=\"14:30\">\n                  14:30{\" \"}\n                </option>\n                <option key={\"15:001\" + index} value=\"15:00\">\n                  15:00{\" \"}\n                </option>\n                <option key={\"15:301\" + index} value=\"15:30\">\n                  15:30{\" \"}\n                </option>\n                <option key={\"16:001\" + index} value=\"16:00\">\n                  16:00{\" \"}\n                </option>\n                <option key={\"16:301\" + index} value=\"16:30\">\n                  16:30{\" \"}\n                </option>\n                <option key={\"17:001\" + index} value=\"17:00\">\n                  17:00{\" \"}\n                </option>\n                <option key={\"17:301\" + index} value=\"17:30\">\n                  17:30{\" \"}\n                </option>\n                <option key={\"18:001\" + index} value=\"18:00\">\n                  18:00{\" \"}\n                </option>\n                <option key={\"18:301\" + index} value=\"18:30\">\n                  18:30{\" \"}\n                </option>\n                <option key={\"19:001\" + index} value=\"19:00\">\n                  19:00{\" \"}\n                </option>\n                <option key={\"19:301\" + index} value=\"19:30\">\n                  19:30{\" \"}\n                </option>\n                <option key={\"20:001\" + index} value=\"20:00\">\n                  20:00{\" \"}\n                </option>\n                <option key={\"20:301\" + index} value=\"20:30\">\n                  20:30{\" \"}\n                </option>\n                <option key={\"21:001\" + index} value=\"21:00\">\n                  21:00{\" \"}\n                </option>\n                <option key={\"21:301\" + index} value=\"21:30\">\n                  21:30{\" \"}\n                </option>\n                <option key={\"22:001\" + index} value=\"22:00\">\n                  22:00{\" \"}\n                </option>\n                <option key={\"22:301\" + index} value=\"22:30\">\n                  22:30{\" \"}\n                </option>\n                <option key={\"23:001\" + index} value=\"23:00\">\n                  23:00{\" \"}\n                </option>\n                <option key={\"23:301\" + index} value=\"23:30\">\n                  23:30{\" \"}\n                </option>\n              </select>\n            </div>\n\n            <div key={\"00:0024\" + index} className=\"endhour\">\n              <select\n                key={index + \"_endhour\"}\n                id={index + \"_endhour\"}\n                className=\"endhour\"\n              >\n                <option key={\"00:00\" + index} value=\"00:00\">\n                  00:00\n                </option>\n                <option key={\"00:30\" + index} value=\"00:30\">\n                  00:30{\" \"}\n                </option>\n                <option key={\"1:00\" + index} value=\"1:00\">\n                  1:00{\" \"}\n                </option>\n                <option key={\"1:30\" + index} value=\"1:30\">\n                  1:30{\" \"}\n                </option>\n                <option key={\"2:00\" + index} value=\"2:00\">\n                  2:00{\" \"}\n                </option>\n                <option key={\"2:30\" + index} value=\"2:30\">\n                  2:30{\" \"}\n                </option>\n                <option key={\"3:00\" + index} value=\"3:00\">\n                  3:00{\" \"}\n                </option>\n                <option key={\"3:30\" + index} value=\"3:30\">\n                  3:30{\" \"}\n                </option>\n                <option key={\"4:00\" + index} value=\"4:00\">\n                  4:00{\" \"}\n                </option>\n                <option key={\"4:30\" + index} value=\"4:30\">\n                  4:30{\" \"}\n                </option>\n                <option key={\"5:00\" + index} value=\"5:00\">\n                  5:00{\" \"}\n                </option>\n                <option key={\"5:30\" + index} value=\"5:30\">\n                  5:30{\" \"}\n                </option>\n                <option key={\"6:00\" + index} value=\"6:00\">\n                  6:00{\" \"}\n                </option>\n                <option key={\"6:30\" + index} value=\"6:30\">\n                  6:30{\" \"}\n                </option>\n                <option key={\"7:00\" + index} value=\"7:00\">\n                  7:00{\" \"}\n                </option>\n                <option key={\"7:30\" + index} value=\"7:30\">\n                  7:30{\" \"}\n                </option>\n                <option key={\"8:00\" + index} value=\"8:00\">\n                  8:00{\" \"}\n                </option>\n                <option key={\"8:30\" + index} value=\"8:30\">\n                  8:30{\" \"}\n                </option>\n                <option key={\"9:00\" + index} value=\"9:00\">\n                  9:00{\" \"}\n                </option>\n                <option key={\"9:30\" + index} value=\"9:30\">\n                  9:30{\" \"}\n                </option>\n                <option key={\"10:00\" + index} value=\"10:00\">\n                  10:00{\" \"}\n                </option>\n                <option key={\"10:30\" + index} value=\"10:30\">\n                  10:30{\" \"}\n                </option>\n                <option key={\"11:00\" + index} value=\"11:00\">\n                  11:00{\" \"}\n                </option>\n                <option key={\"11:30\" + index} value=\"11:30\">\n                  11:30{\" \"}\n                </option>\n                <option key={\"12:00\" + index} value=\"12:00\">\n                  12:00{\" \"}\n                </option>\n                <option key={\"12:30\" + index} value=\"12:30\">\n                  12:30{\" \"}\n                </option>\n                <option key={\"13:00\" + index} value=\"13:00\">\n                  13:00{\" \"}\n                </option>\n                <option key={\"13:30\" + index} value=\"13:30\">\n                  13:30{\" \"}\n                </option>\n                <option key={\"14:00\" + index} value=\"14:00\">\n                  14:00{\" \"}\n                </option>\n                <option key={\"14:30\" + index} value=\"14:30\">\n                  14:30{\" \"}\n                </option>\n                <option key={\"15:00\" + index} value=\"15:00\">\n                  15:00{\" \"}\n                </option>\n                <option key={\"15:30\" + index} value=\"15:30\">\n                  15:30{\" \"}\n                </option>\n                <option key={\"16:00\" + index} value=\"16:00\">\n                  16:00{\" \"}\n                </option>\n                <option key={\"16:30\" + index} value=\"16:30\">\n                  16:30{\" \"}\n                </option>\n                <option key={\"17:00\" + index} value=\"17:00\">\n                  17:00{\" \"}\n                </option>\n                <option key={\"17:30\" + index} value=\"17:30\">\n                  17:30{\" \"}\n                </option>\n                <option key={\"18:00\" + index} value=\"18:00\">\n                  18:00{\" \"}\n                </option>\n                <option key={\"18:30\" + index} value=\"18:30\">\n                  18:30{\" \"}\n                </option>\n                <option key={\"19:00\" + index} value=\"19:00\">\n                  19:00{\" \"}\n                </option>\n                <option key={\"19:30\" + index} value=\"19:30\">\n                  19:30{\" \"}\n                </option>\n                <option key={\"20:00\" + index} value=\"20:00\">\n                  20:00{\" \"}\n                </option>\n                <option key={\"20:30\" + index} value=\"20:30\">\n                  20:30{\" \"}\n                </option>\n                <option key={\"21:00\" + index} value=\"21:00\">\n                  21:00{\" \"}\n                </option>\n                <option key={\"21:30\" + index} value=\"21:30\">\n                  21:30{\" \"}\n                </option>\n                <option key={\"22:00\" + index} value=\"22:00\">\n                  22:00{\" \"}\n                </option>\n                <option key={\"22:30\" + index} value=\"22:30\">\n                  22:30{\" \"}\n                </option>\n                <option key={\"23:00\" + index} value=\"23:00\">\n                  23:00{\" \"}\n                </option>\n                <option key={\"23:30\" + index} value=\"23:30\">\n                  23:30{\" \"}\n                </option>\n              </select>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nconst CreateNewBusiness = (props) => {\n  let businessId = window.location.pathname.split(\"/\")[2];\n\n  //states\n  const history = useHistory();\n  const [defultBus, setDefultBus] = useState({\n    businessname: \"\",\n    ownerid: \"\",\n    phone: \"\",\n    businessaddress: \"\",\n    geolocation: \"\",\n    calendar: \"\",\n  });\n  const [objToSend, setObjToSend] = useState({\n    businessname: defultBus.businessname,\n    ownerid: defultBus.ownerid,\n    phone: defultBus.phone,\n    businessaddress: defultBus.businessaddress,\n    geolocation: defultBus.geolocation,\n    calendar: defultBus.calendar,\n  });\n\n  // if we get busID from props then its update business if not its a new business\n  // so if yes we have to get the bus from the server and set the data on the fields and then we can update\n  // the data and save it\n  useEffect(() => {\n    if (businessId) {\n      api(\"business/\" + businessId, {\n        method: \"GET\",\n        headers: {\n          \"content-type\": \"application/json\",\n          token: localStorage.getItem(\"access_token\"),\n        },\n      })\n        .then((response) => {\n          setDefultBus(response.businessObj);\n          setObjToSend(response.businessObj);\n          // here we get the bus from the server by his id\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, []);\n\n  //functions\n  const onChangeHandler = (e) => {\n    const val = e.target.value;\n    switch (e.target.id) {\n      case \"shopname\":\n        setObjToSend({ ...objToSend, businessname: val });\n        break;\n      case \"phonenumber\":\n        setObjToSend({ ...objToSend, phone: val });\n        break;\n      case \"adress\":\n        setObjToSend({ ...objToSend, businessaddress: val });\n        break;\n      case \"location\":\n        setObjToSend({ ...objToSend, geolocation: val });\n        break;\n    }\n  };\n  //functions\n  const onSubmitHandler = (e) => {\n    //missing validation in this function I will do it later- Awwad\n    e.preventDefault();\n\n    objToSend.calendar = checkAllDays();\n\n    // we have to update or add a new business its depends on the businessId\n\n    if (businessId) {\n      // here we want to update\n      api(\"editbusinsess/\" + businessId, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: localStorage.getItem(\"access_token\"),\n        },\n        body: JSON.stringify(objToSend),\n      })\n        .then((response) => {\n          if (response.ownerid) {\n            toast.success(\"Successfully Updated \", {\n              position: toast.POSITION.BOTTOM_CENTER,\n            });\n          } else {\n            toast.error(response, {\n              position: toast.POSITION.BOTTOM_CENTER,\n            });\n          }\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    } else {\n      // here we want to create new\n\n      api(\"newbusiness/\", {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\",\n          token: localStorage.getItem(\"access_token\"),\n        },\n        body: JSON.stringify(objToSend),\n      })\n        .then((response) => {\n          if (response.ownerid) {\n            toast.success(\"Successfully Added \", {\n              position: toast.POSITION.BOTTOM_CENTER,\n            });\n          } else {\n            toast.error(response, {\n              position: toast.POSITION.BOTTOM_CENTER,\n            });\n          }\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    }\n  };\n\n  return (\n    <div className=\"addEditBusiness\">\n      <Title title=\"Add/ Edit Business\" />\n      <form onSubmit={onSubmitHandler}>\n        <Inputs\n          type=\"text\"\n          id=\"shopname\"\n          name=\"shopname\"\n          placeholder=\"Shop's Name\"\n          icon=\"/img/barber-shop.svg\"\n          alt=\"shopname\"\n          value={defultBus.businessname}\n          onChangeFunc={onChangeHandler}\n        />\n        <Inputs\n          type=\"number\"\n          id=\"phonenumber\"\n          name=\"phonenumber\"\n          placeholder=\"Phone Number\"\n          icon=\"/img/phone-call.svg\"\n          alt=\"phonenumber\"\n          value={defultBus.phone}\n          onChangeFunc={onChangeHandler}\n        />\n        <Inputs\n          type=\"text\"\n          id=\"adress\"\n          name=\"adress\"\n          placeholder=\"Adress\"\n          icon=\"/img/location.svg\"\n          alt=\"adress\"\n          value={defultBus.businessaddress}\n          onChangeFunc={onChangeHandler}\n        />\n        <Inputs\n          type=\"text\"\n          id=\"location\"\n          name=\"location\"\n          placeholder=\"Locate me geo\"\n          icon=\"/img/address.svg\"\n          alt=\"location\"\n          value={defultBus.businessaddress}\n          onChangeFunc={onChangeHandler}\n        />\n        <div className=\"choosemonth\">\n          <label htmlFor=\"month\">Choose a month:</label>\n\n          <select name=\"month\" id=\"month\">\n            <option value=\"January\">January</option>\n            <option value=\"February\">February</option>\n            <option value=\"March\">March</option>\n            <option value=\"April\">April</option>\n            <option value=\"May\">May</option>\n            <option value=\"June\">June</option>\n            <option value=\"July\">July</option>\n            <option value=\"August\">August</option>\n            <option value=\"September\">September</option>\n            <option value=\"October\">October</option>\n            <option value=\"November\">November</option>\n            <option value=\"December\">December</option>\n          </select>\n        </div>\n        <div className=\"timediffence\">\n          <label htmlFor=\"timediff\">Time diffence between appointments:</label>\n\n          <select name=\"timediff\" id=\"timediff\">\n            <option value=\"30\">30 min</option>\n            <option value=\"15\">15 min</option>\n\n            <option value=\"45\">45 min</option>\n            <option value=\"60\">60 min</option>\n          </select>\n        </div>\n        <div id=\"weekinfo\">\n          <div className=\"dayinfo\">\n            <div>Week days:</div>\n            <div>Start hour:</div>\n            <div>End hour:</div>\n          </div>\n          {make(objToSend)}\n        </div>\n        <Buttons className=\"button\" text=\"Save\" />\n      </form>\n    </div>\n  );\n};\n\nexport default CreateNewBusiness;\n","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/api/api.js",["202","203"],"import React from \"react\";\n\nconst api = (url, options) => {\n  const server = `http://localhost:4000/`;\n  const heroku = \"https://barber-appointment-backend.herokuapp.com/\";\n\n  return fetch(`${heroku}${url}`, {\n    ...options,\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => console.error(err));\n};\n\nexport default api;\n","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/Public/MyBusinessCard.jsx",["204","205","206","207","208"],"import React, { useState } from \"react\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport \"./MybusinessCard.css\";\n//functions imports\nimport api from \"../api/api\";\nconst MyBusinessCard = ({\n  businessName,\n  location,\n  avg,\n  apCard,\n  bsCard,\n  month,\n  day,\n  hour,\n  id,\n  user,\n  geolocation,\n  businessAddress,\n  ownerFirstName,\n  ownerLastName,\n  phone,\n  setUser,\n}) => {\n  //states\n  //fuctions\n\n  {\n    return (\n      <div className=\"card\">\n        <NavLink exact to={`editAddBusiness/${id}`}>\n          <img\n            className=\"profile-pic\"\n            src=\"https://images-na.ssl-images-amazon.com/images/I/51bBDD%2BRa1L._AC_SX355_.jpg\"\n            alt=\"\"\n          />\n        </NavLink>\n        <div className=\"section\">\n          <NavLink exact to={`editAddBusiness/${id}`}>\n            <h3 className=\"business-name\">{businessName}</h3>\n          </NavLink>\n\n          <NavLink exact to={`busappointments/${id}`}>\n            <img className=\"calendar-icon\" src=\"/img/calendar.svg\" alt=\"\"></img>\n          </NavLink>\n        </div>\n        <img className=\"location-icon\" src=\"img/location.svg\" />\n        <h3 className=\"location\">{location}</h3>\n\n        <div className=\"edge\"></div>\n      </div>\n    );\n  }\n};\n\nexport default MyBusinessCard;\n","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/Public/DayBox.jsx",[],"/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/Public/DayBoxBus.jsx",[],"/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/Public/HourBox.jsx",["209"],"import React, { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport \"./HourBox.css\";\n\n//functions imports\nimport api from \"../api/api\";\n\nconst HourBox = ({\n  hour,\n  calendarName,\n  businessId,\n  setChanges,\n  setUser,\n  full,\n}) => {\n  //functions\n  const clickHandler = () => {\n    const obj = {\n      day: calendarName,\n      hour: hour,\n      businessId: businessId,\n    };\n    api(\"appointment\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        token: localStorage.getItem(\"access_token\"),\n      },\n      body: JSON.stringify(obj),\n    })\n      .then((appointments) => {\n        toast.success(\"The Appointment is Set \", {\n          position: toast.POSITION.BOTTOM_CENTER,\n        });\n        setChanges((prev) => !prev);\n        setUser((prev) => {\n          const newObj = {\n            ...prev,\n            myAppointments: appointments.myappointments,\n          };\n          localStorage.setItem(\"userObj\", JSON.stringify(newObj));\n          return newObj;\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n  return full ? (\n    <h2 className=\"not-available\">No Hours Available</h2>\n  ) : (\n    <div onClick={clickHandler} className=\"HourBox\">\n      {hour}\n    </div>\n  );\n};\n\nexport default HourBox;\n","/home/muhammad/Desktop/myFiles/Web Development/projects/barber-appointment-frontend/src/components/Client/Client.jsx",["210","211"],"import React, { useEffect, useState } from \"react\";\n\n//functions imports\nimport api from \"../api/api\";\nimport \"./Client.css\";\n\nconst Client = ({ hour, id }) => {\n  //states\n  const [user, setUser] = useState({});\n  //useEffect\n  useEffect(() => {\n    api(`user/${id}`, {\n      method: \"GET\",\n      headers: { token: localStorage.getItem(\"access_token\") },\n    })\n      .then((user) => {\n        setUser(user);\n      })\n      .catch((err) => console.error(err));\n  }, []);\n\n  return (\n    <div className=\"client-card\">\n      <img\n        className=\"profile-pic\"\n        src=\"https://images-na.ssl-images-amazon.com/images/I/51bBDD%2BRa1L._AC_SX355_.jpg\"\n        alt=\"profile picture\"\n      />\n      <h2 className=\"full-name\">\n        {user.firstname} {user.lastname}\n      </h2>\n      <h2 className=\"hour\">{hour}</h2>\n    </div>\n  );\n};\n\nexport default Client;\n",{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","severity":1,"message":"217","line":1,"column":8,"nodeType":"218","messageId":"219","endLine":1,"endColumn":12},{"ruleId":"216","severity":1,"message":"220","line":8,"column":3,"nodeType":"218","messageId":"219","endLine":8,"endColumn":10},{"ruleId":"221","severity":1,"message":"222","line":60,"column":14,"nodeType":"223","messageId":"224","endLine":60,"endColumn":16},{"ruleId":"216","severity":1,"message":"225","line":5,"column":10,"nodeType":"218","messageId":"219","endLine":5,"endColumn":15},{"ruleId":"216","severity":1,"message":"226","line":6,"column":9,"nodeType":"218","messageId":"219","endLine":6,"endColumn":20},{"ruleId":"216","severity":1,"message":"227","line":2,"column":19,"nodeType":"218","messageId":"219","endLine":2,"endColumn":29},{"ruleId":"228","severity":1,"message":"229","line":9,"column":7,"nodeType":"230","endLine":13,"endColumn":8},{"ruleId":"228","severity":1,"message":"229","line":25,"column":9,"nodeType":"230","endLine":25,"endColumn":59},{"ruleId":"216","severity":1,"message":"231","line":1,"column":17,"nodeType":"218","messageId":"219","endLine":1,"endColumn":25},{"ruleId":"216","severity":1,"message":"227","line":2,"column":19,"nodeType":"218","messageId":"219","endLine":2,"endColumn":29},{"ruleId":"232","severity":1,"message":"233","line":92,"column":3,"nodeType":"234","messageId":"235","endLine":181,"endColumn":4},{"ruleId":"228","severity":1,"message":"229","line":105,"column":9,"nodeType":"230","endLine":105,"endColumn":65},{"ruleId":"221","severity":1,"message":"222","line":114,"column":50,"nodeType":"223","messageId":"224","endLine":114,"endColumn":52},{"ruleId":"236","severity":1,"message":"237","line":135,"column":11,"nodeType":"230","endLine":139,"endColumn":13},{"ruleId":"228","severity":1,"message":"229","line":152,"column":9,"nodeType":"230","endLine":152,"endColumn":66},{"ruleId":"228","severity":1,"message":"229","line":154,"column":9,"nodeType":"230","endLine":154,"endColumn":65},{"ruleId":"236","severity":1,"message":"237","line":160,"column":11,"nodeType":"230","endLine":164,"endColumn":13},{"ruleId":"216","severity":1,"message":"238","line":3,"column":10,"nodeType":"218","messageId":"219","endLine":3,"endColumn":15},{"ruleId":"221","severity":1,"message":"222","line":18,"column":64,"nodeType":"223","messageId":"224","endLine":18,"endColumn":66},{"ruleId":"232","severity":1,"message":"233","line":33,"column":3,"nodeType":"234","messageId":"235","endLine":59,"endColumn":4},{"ruleId":"216","severity":1,"message":"231","line":1,"column":17,"nodeType":"218","messageId":"219","endLine":1,"endColumn":25},{"ruleId":"216","severity":1,"message":"239","line":1,"column":27,"nodeType":"218","messageId":"219","endLine":1,"endColumn":36},{"ruleId":"216","severity":1,"message":"227","line":2,"column":19,"nodeType":"218","messageId":"219","endLine":2,"endColumn":29},{"ruleId":"228","severity":1,"message":"229","line":27,"column":9,"nodeType":"230","endLine":31,"endColumn":10},{"ruleId":"216","severity":1,"message":"238","line":3,"column":10,"nodeType":"218","messageId":"219","endLine":3,"endColumn":15},{"ruleId":"221","severity":1,"message":"222","line":17,"column":68,"nodeType":"223","messageId":"224","endLine":17,"endColumn":70},{"ruleId":"232","severity":1,"message":"233","line":33,"column":3,"nodeType":"234","messageId":"235","endLine":58,"endColumn":4},{"ruleId":"240","severity":1,"message":"241","line":29,"column":5,"nodeType":"242","messageId":"243","endLine":51,"endColumn":6},{"ruleId":"216","severity":1,"message":"244","line":11,"column":10,"nodeType":"218","messageId":"219","endLine":11,"endColumn":16},{"ruleId":"216","severity":1,"message":"245","line":16,"column":9,"nodeType":"218","messageId":"219","endLine":16,"endColumn":16},{"ruleId":"240","severity":1,"message":"241","line":36,"column":5,"nodeType":"242","messageId":"243","endLine":55,"endColumn":6},{"ruleId":"216","severity":1,"message":"246","line":4,"column":8,"nodeType":"218","messageId":"219","endLine":4,"endColumn":14},{"ruleId":"216","severity":1,"message":"227","line":8,"column":19,"nodeType":"218","messageId":"219","endLine":8,"endColumn":29},{"ruleId":"216","severity":1,"message":"247","line":12,"column":9,"nodeType":"218","messageId":"219","endLine":12,"endColumn":20},{"ruleId":"216","severity":1,"message":"220","line":3,"column":10,"nodeType":"218","messageId":"219","endLine":3,"endColumn":17},{"ruleId":"248","severity":1,"message":"249","line":95,"column":6,"nodeType":"250","endLine":95,"endColumn":8,"suggestions":"251"},{"ruleId":"221","severity":1,"message":"222","line":115,"column":33,"nodeType":"223","messageId":"224","endLine":115,"endColumn":35},{"ruleId":"248","severity":1,"message":"249","line":124,"column":6,"nodeType":"250","endLine":124,"endColumn":17,"suggestions":"252"},{"ruleId":"232","severity":1,"message":"233","line":126,"column":3,"nodeType":"234","messageId":"235","endLine":211,"endColumn":4},{"ruleId":"228","severity":1,"message":"229","line":128,"column":7,"nodeType":"230","endLine":131,"endColumn":9},{"ruleId":"221","severity":1,"message":"222","line":143,"column":60,"nodeType":"223","messageId":"224","endLine":143,"endColumn":62},{"ruleId":"216","severity":1,"message":"220","line":3,"column":10,"nodeType":"218","messageId":"219","endLine":3,"endColumn":17},{"ruleId":"216","severity":1,"message":"253","line":8,"column":8,"nodeType":"218","messageId":"219","endLine":8,"endColumn":12},{"ruleId":"248","severity":1,"message":"249","line":51,"column":6,"nodeType":"250","endLine":51,"endColumn":8,"suggestions":"254"},{"ruleId":"221","severity":1,"message":"222","line":71,"column":33,"nodeType":"223","messageId":"224","endLine":71,"endColumn":35},{"ruleId":"248","severity":1,"message":"249","line":80,"column":6,"nodeType":"250","endLine":80,"endColumn":17,"suggestions":"255"},{"ruleId":"232","severity":1,"message":"233","line":82,"column":3,"nodeType":"234","messageId":"235","endLine":137,"endColumn":4},{"ruleId":"228","severity":1,"message":"229","line":84,"column":7,"nodeType":"230","endLine":87,"endColumn":9},{"ruleId":"228","severity":1,"message":"229","line":109,"column":11,"nodeType":"230","endLine":112,"endColumn":13},{"ruleId":"216","severity":1,"message":"256","line":2,"column":8,"nodeType":"218","messageId":"219","endLine":2,"endColumn":12},{"ruleId":"216","severity":1,"message":"257","line":8,"column":8,"nodeType":"218","messageId":"219","endLine":8,"endColumn":15},{"ruleId":"216","severity":1,"message":"258","line":19,"column":9,"nodeType":"218","messageId":"219","endLine":19,"endColumn":27},{"ruleId":"221","severity":1,"message":"222","line":32,"column":63,"nodeType":"223","messageId":"224","endLine":32,"endColumn":65},{"ruleId":"216","severity":1,"message":"259","line":33,"column":15,"nodeType":"218","messageId":"219","endLine":33,"endColumn":27},{"ruleId":"216","severity":1,"message":"260","line":35,"column":13,"nodeType":"218","messageId":"219","endLine":35,"endColumn":28},{"ruleId":"248","severity":1,"message":"261","line":43,"column":6,"nodeType":"250","endLine":43,"endColumn":8,"suggestions":"262"},{"ruleId":"221","severity":1,"message":"222","line":51,"column":47,"nodeType":"223","messageId":"224","endLine":51,"endColumn":49},{"ruleId":"221","severity":1,"message":"222","line":53,"column":63,"nodeType":"223","messageId":"224","endLine":53,"endColumn":65},{"ruleId":"221","severity":1,"message":"222","line":81,"column":68,"nodeType":"223","messageId":"224","endLine":81,"endColumn":70},{"ruleId":"248","severity":1,"message":"261","line":98,"column":6,"nodeType":"250","endLine":98,"endColumn":15,"suggestions":"263"},{"ruleId":"221","severity":1,"message":"222","line":100,"column":31,"nodeType":"223","messageId":"224","endLine":100,"endColumn":33},{"ruleId":"216","severity":1,"message":"244","line":11,"column":10,"nodeType":"218","messageId":"219","endLine":11,"endColumn":16},{"ruleId":"216","severity":1,"message":"264","line":12,"column":5,"nodeType":"218","messageId":"219","endLine":12,"endColumn":12},{"ruleId":"240","severity":1,"message":"241","line":28,"column":3,"nodeType":"242","messageId":"243","endLine":66,"endColumn":4},{"ruleId":"221","severity":1,"message":"222","line":77,"column":20,"nodeType":"223","messageId":"224","endLine":77,"endColumn":22},{"ruleId":"216","severity":1,"message":"265","line":108,"column":7,"nodeType":"218","messageId":"219","endLine":108,"endColumn":21},{"ruleId":"266","severity":1,"message":"267","line":115,"column":32,"nodeType":"268","messageId":"269","endLine":115,"endColumn":34},{"ruleId":"216","severity":1,"message":"270","line":156,"column":9,"nodeType":"218","messageId":"219","endLine":156,"endColumn":21},{"ruleId":"216","severity":1,"message":"245","line":485,"column":9,"nodeType":"218","messageId":"219","endLine":485,"endColumn":16},{"ruleId":"248","severity":1,"message":"249","line":524,"column":6,"nodeType":"250","endLine":524,"endColumn":8,"suggestions":"271"},{"ruleId":"240","severity":1,"message":"241","line":529,"column":5,"nodeType":"242","messageId":"243","endLine":542,"endColumn":6},{"ruleId":"216","severity":1,"message":"272","line":1,"column":8,"nodeType":"218","messageId":"219","endLine":1,"endColumn":13},{"ruleId":"216","severity":1,"message":"273","line":4,"column":9,"nodeType":"218","messageId":"219","endLine":4,"endColumn":15},{"ruleId":"216","severity":1,"message":"231","line":1,"column":17,"nodeType":"218","messageId":"219","endLine":1,"endColumn":25},{"ruleId":"216","severity":1,"message":"227","line":2,"column":19,"nodeType":"218","messageId":"219","endLine":2,"endColumn":29},{"ruleId":"216","severity":1,"message":"274","line":5,"column":8,"nodeType":"218","messageId":"219","endLine":5,"endColumn":11},{"ruleId":"232","severity":1,"message":"233","line":27,"column":3,"nodeType":"234","messageId":"235","endLine":52,"endColumn":4},{"ruleId":"228","severity":1,"message":"229","line":46,"column":9,"nodeType":"230","endLine":46,"endColumn":65},{"ruleId":"216","severity":1,"message":"231","line":1,"column":17,"nodeType":"218","messageId":"219","endLine":1,"endColumn":25},{"ruleId":"248","severity":1,"message":"275","line":20,"column":6,"nodeType":"250","endLine":20,"endColumn":8,"suggestions":"276"},{"ruleId":"236","severity":1,"message":"237","line":24,"column":7,"nodeType":"230","endLine":28,"endColumn":9},"no-native-reassign",["277"],"no-negated-in-lhs",["278"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'state' is assigned a value but never used.","'handleState' is assigned a value but never used.","'withRouter' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'toast' is defined but never used.","'useEffect' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'logDOM' is defined but never used.","'history' is assigned a value but never used.","'Inputs' is defined but never used.","'handleClick' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'businessId'. Either include it or remove the dependency array.","ArrayExpression",["279"],["280"],"'Card' is defined but never used.",["281"],["282"],"'uuid' is defined but never used.","'HourBox' is defined but never used.","'calendarNameToSend' is assigned a value but never used.","'workingHours' is assigned a value but never used.","'appointmentsArr' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'calendarName' and 'dayNum'. Either include them or remove the dependency array.",["283"],["284"],"'userObj' is assigned a value but never used.","'someThingWrong' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'monthelement' is assigned a value but never used.",["285"],"'React' is defined but never used.","'server' is assigned a value but never used.","'api' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["286"],"no-global-assign","no-unsafe-negation",{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"287","fix":"291"},{"desc":"289","fix":"292"},{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},{"desc":"287","fix":"297"},{"desc":"298","fix":"299"},"Update the dependencies array to be: [businessId]",{"range":"300","text":"301"},"Update the dependencies array to be: [businessId, selectVal]",{"range":"302","text":"303"},{"range":"304","text":"301"},{"range":"305","text":"303"},"Update the dependencies array to be: [calendarName, dayNum]",{"range":"306","text":"307"},"Update the dependencies array to be: [calendarName, changes, dayNum]",{"range":"308","text":"309"},{"range":"310","text":"301"},"Update the dependencies array to be: [id]",{"range":"311","text":"312"},[2656,2658],"[businessId]",[3564,3575],"[businessId, selectVal]",[1217,1219],[2125,2136],[1505,1507],"[calendarName, dayNum]",[3476,3485],"[calendarName, changes, dayNum]",[17011,17013],[467,469],"[id]"]